{"ast":null,"code":"let ans = [];\nfunction createSudoku() {\n  // let ans=[]\n  let row = [];\n  let col = [];\n  let box = [];\n  let getbox = [];\n  for (let i = 0; i < 10; i++) {\n    ans[i] = [];\n    row[i] = [];\n    col[i] = [];\n    box[i] = [];\n    getbox[i] = [];\n  }\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      row[i][j] = 0;\n      col[i][j] = 0;\n      box[i][j] = 0;\n      getbox[i][j] = -1;\n    }\n  }\n  let a = 0;\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      if (j === 6) a++;else if (j === 3) a++;\n      getbox[i][j] = a;\n    }\n    if (i <= 1) a = 0;else if (i <= 4) a = 3;else a = 6;\n  }\n  function generate(i, j) {\n    if (i === 9) {\n      return 1;\n    }\n    let avail = [];\n    let b = getbox[i][j];\n    for (let k = 1; k < 10; k++) {\n      if (row[i][k] === 0 && col[j][k] === 0 && box[b][k] === 0) avail.push(k);\n    }\n    for (let k = 0; k < avail.length; k++) {\n      let a = -1;\n      let ind;\n      while (a == -1) {\n        a = Math.floor(Math.random() * avail.length);\n        ind = a;\n        a = avail[a];\n      }\n      ans[i][j] = a;\n      row[i][a] = 1;\n      col[j][a] = 1;\n      box[b][a] = 1;\n      if (j === 8) {\n        if (generate(i + 1, 0) === 1) return 1;\n      } else {\n        if (generate(i, j + 1) === 1) return 1;\n      }\n      row[i][a] = 0;\n      col[j][a] = 0;\n      box[b][a] = 0;\n      avail[ind] = -1;\n    }\n    return 0;\n  }\n  generate(0, 0);\n  let util = structuredClone(ans);\n  let i = 0;\n  while (i < 20) {\n    let row = Math.floor(Math.random() * 9);\n    let col = Math.floor(Math.random() * 9);\n    if (util[row][col] !== -1) {\n      i++;\n      util[row][col] = -1;\n    }\n  }\n  // for(i=0;i<10;i++)\n  // console.log(...util[i])\n\n  return util;\n}\ncreateSudoku();\n\n//for(let i=0;i<ans.length;i++)\n//console.log(...ans[i])\nexport default createSudoku;","map":{"version":3,"names":["ans","createSudoku","row","col","box","getbox","i","j","a","generate","avail","b","k","push","length","ind","Math","floor","random","util","structuredClone"],"sources":["/Users/mohammedahethesham/Desktop/app/app/src/App.js"],"sourcesContent":["let ans=[];\nfunction createSudoku()\n{\n // let ans=[]\n  let row=[]\n  let col=[]\n  let box=[]\n  let getbox=[]\n  for(let i=0;i<10;i++)\n    {\n      ans[i]=[]\n      row[i]=[]\n      col[i]=[]\n      box[i]=[]\n      getbox[i]=[]\n    }\n  for(let i=0;i<10;i++)\n    {\n      for(let j=0;j<10;j++)\n        {\n          row[i][j]=0;\n          col[i][j]=0;\n          box[i][j]=0;\n          getbox[i][j]=-1;\n        }\n    }\n  let a=0;\n  for(let i=0;i<10;i++)\n    {\n      for(let j=0;j<10;j++)\n        {\n          if(j===6)\n            a++;\n          else if(j===3)\n            a++;\n          getbox[i][j]=a;\n        }\n      if(i<=1)\n        a=0;\n      else if(i<=4)\n        a=3\n      else\n        a=6;\n    }\n  \n  function generate( i, j)\n  {\n    if(i===9)\n    {\n      return 1;\n    }\n    let avail=[]\n    let b=getbox[i][j]\n    for(let k=1;k<10;k++)\n      {\n        if(row[i][k]===0 && col[j][k]===0 && box[b][k]===0)\n          avail.push(k)\n      }\n    for(let k=0;k<avail.length;k++)\n      {\n        let a=-1\n        let ind;\n        while(a==-1)\n          {\n            a=Math.floor(Math.random()*avail.length);\n            ind=a\n            a=avail[a]\n          }\n        ans[i][j]=a;\n        row[i][a]=1;col[j][a]=1;box[b][a]=1;\n        if(j===8)\n        {\n          if(generate(i+1,0)===1)\n            return 1;\n        }\n        else\n        {\n          if(generate(i,j+1)===1)\n            return 1;\n        }\n        row[i][a]=0;col[j][a]=0;box[b][a]=0;\n        avail[ind]=-1\n      }\n    return 0;\n  }\n  generate(0,0)\n  \n\n  let util=structuredClone(ans);\n  let i=0;\nwhile(i<20)\n    {\n      let row=Math.floor(Math.random()*9)\n      let col=Math.floor(Math.random()*9)\n      if(util[row][col]!==-1)\n      {\n        i++;\n        util[row][col]=-1;\n      }\n    }\n // for(i=0;i<10;i++)\n   // console.log(...util[i])\n  \n  return util;    \n}\ncreateSudoku()\n\n//for(let i=0;i<ans.length;i++)\n//console.log(...ans[i])\nexport default createSudoku;\n"],"mappings":"AAAA,IAAIA,GAAG,GAAC,EAAE;AACV,SAASC,YAAYA,CAAA,EACrB;EACC;EACC,IAAIC,GAAG,GAAC,EAAE;EACV,IAAIC,GAAG,GAAC,EAAE;EACV,IAAIC,GAAG,GAAC,EAAE;EACV,IAAIC,MAAM,GAAC,EAAE;EACb,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;IACEN,GAAG,CAACM,CAAC,CAAC,GAAC,EAAE;IACTJ,GAAG,CAACI,CAAC,CAAC,GAAC,EAAE;IACTH,GAAG,CAACG,CAAC,CAAC,GAAC,EAAE;IACTF,GAAG,CAACE,CAAC,CAAC,GAAC,EAAE;IACTD,MAAM,CAACC,CAAC,CAAC,GAAC,EAAE;EACd;EACF,KAAI,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;IACE,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;MACEL,GAAG,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC;MACXJ,GAAG,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC;MACXH,GAAG,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC;MACXF,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC,CAAC;IACjB;EACJ;EACF,IAAIC,CAAC,GAAC,CAAC;EACP,KAAI,IAAIF,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;IACE,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;MACE,IAAGA,CAAC,KAAG,CAAC,EACNC,CAAC,EAAE,CAAC,KACD,IAAGD,CAAC,KAAG,CAAC,EACXC,CAAC,EAAE;MACLH,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC,GAACC,CAAC;IAChB;IACF,IAAGF,CAAC,IAAE,CAAC,EACLE,CAAC,GAAC,CAAC,CAAC,KACD,IAAGF,CAAC,IAAE,CAAC,EACVE,CAAC,GAAC,CAAC,MAEHA,CAAC,GAAC,CAAC;EACP;EAEF,SAASC,QAAQA,CAAEH,CAAC,EAAEC,CAAC,EACvB;IACE,IAAGD,CAAC,KAAG,CAAC,EACR;MACE,OAAO,CAAC;IACV;IACA,IAAII,KAAK,GAAC,EAAE;IACZ,IAAIC,CAAC,GAACN,MAAM,CAACC,CAAC,CAAC,CAACC,CAAC,CAAC;IAClB,KAAI,IAAIK,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EAClB;MACE,IAAGV,GAAG,CAACI,CAAC,CAAC,CAACM,CAAC,CAAC,KAAG,CAAC,IAAIT,GAAG,CAACI,CAAC,CAAC,CAACK,CAAC,CAAC,KAAG,CAAC,IAAIR,GAAG,CAACO,CAAC,CAAC,CAACC,CAAC,CAAC,KAAG,CAAC,EAChDF,KAAK,CAACG,IAAI,CAACD,CAAC,CAAC;IACjB;IACF,KAAI,IAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,GAACF,KAAK,CAACI,MAAM,EAACF,CAAC,EAAE,EAC5B;MACE,IAAIJ,CAAC,GAAC,CAAC,CAAC;MACR,IAAIO,GAAG;MACP,OAAMP,CAAC,IAAE,CAAC,CAAC,EACT;QACEA,CAAC,GAACQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACR,KAAK,CAACI,MAAM,CAAC;QACxCC,GAAG,GAACP,CAAC;QACLA,CAAC,GAACE,KAAK,CAACF,CAAC,CAAC;MACZ;MACFR,GAAG,CAACM,CAAC,CAAC,CAACC,CAAC,CAAC,GAACC,CAAC;MACXN,GAAG,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,GAAC,CAAC;MAACL,GAAG,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC;MAACJ,GAAG,CAACO,CAAC,CAAC,CAACH,CAAC,CAAC,GAAC,CAAC;MACnC,IAAGD,CAAC,KAAG,CAAC,EACR;QACE,IAAGE,QAAQ,CAACH,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,KAAG,CAAC,EACpB,OAAO,CAAC;MACZ,CAAC,MAED;QACE,IAAGG,QAAQ,CAACH,CAAC,EAACC,CAAC,GAAC,CAAC,CAAC,KAAG,CAAC,EACpB,OAAO,CAAC;MACZ;MACAL,GAAG,CAACI,CAAC,CAAC,CAACE,CAAC,CAAC,GAAC,CAAC;MAACL,GAAG,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,GAAC,CAAC;MAACJ,GAAG,CAACO,CAAC,CAAC,CAACH,CAAC,CAAC,GAAC,CAAC;MACnCE,KAAK,CAACK,GAAG,CAAC,GAAC,CAAC,CAAC;IACf;IACF,OAAO,CAAC;EACV;EACAN,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC;EAGb,IAAIU,IAAI,GAACC,eAAe,CAACpB,GAAG,CAAC;EAC7B,IAAIM,CAAC,GAAC,CAAC;EACT,OAAMA,CAAC,GAAC,EAAE,EACN;IACE,IAAIJ,GAAG,GAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC;IACnC,IAAIf,GAAG,GAACa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC;IACnC,IAAGC,IAAI,CAACjB,GAAG,CAAC,CAACC,GAAG,CAAC,KAAG,CAAC,CAAC,EACtB;MACEG,CAAC,EAAE;MACHa,IAAI,CAACjB,GAAG,CAAC,CAACC,GAAG,CAAC,GAAC,CAAC,CAAC;IACnB;EACF;EACH;EACE;;EAED,OAAOgB,IAAI;AACb;AACAlB,YAAY,CAAC,CAAC;;AAEd;AACA;AACA,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}