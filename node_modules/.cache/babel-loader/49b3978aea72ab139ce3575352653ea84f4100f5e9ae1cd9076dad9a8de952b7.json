{"ast":null,"code":"let width = window.innerWidth / 100;\nlet height = window.innerHeight / 100;\nlet h_font = \"black\";\nexport function mode2() {\n  if (h_font == \"black\") {\n    h_font = \"white\";\n  } else {\n    h_font = \"black\";\n  }\n}\nexport const res2 = {\n  stats: {\n    image: function (image) {\n      let style = {\n        width: `${10 * width}px`,\n        height: `${20 * height}px`,\n        position: 'relative',\n        top: `${10 * height}px`,\n        left: `${5 * width}px`,\n        backgroundImage: `url(${image})`,\n        backgroundSize: `${10 * width}px ${20 * height}px`\n      };\n      return style;\n    },\n    leaderboard: function () {\n      let style = {\n        position: 'relative',\n        bottom: `${30 * height}px`,\n        left: `${30 * width}px`,\n        width: `${40 * width}px`,\n        border: `${Math.min(0.1 * height, 0.1 * width)}px solid grey`,\n        color: h_font\n      };\n      return style;\n    },\n    header: function () {\n      let style = {\n        height: `${10 * height}px`,\n        width: `${60 * width}px`,\n        position: \"relative\",\n        color: h_font\n      };\n      return style;\n    },\n    heading: function () {\n      let style = {\n        bottom: `${30 * height}px`,\n        left: `${41.5 * width}px`,\n        position: \"relative\",\n        margin: `${5 * height}px`,\n        color: h_font,\n        fontWeight: '100'\n      };\n      return style;\n    },\n    footer: function () {\n      let style = {\n        position: \"relative\",\n        top: `${22 * height}px`\n      };\n      return style;\n    },\n    table: function () {\n      let style = {\n        position: 'relative',\n        color: h_font,\n        top: `${15 * height}px`\n      };\n      return style;\n    }\n  }\n};","map":{"version":3,"names":["width","window","innerWidth","height","innerHeight","h_font","mode2","res2","stats","image","style","position","top","left","backgroundImage","backgroundSize","leaderboard","bottom","border","Math","min","color","header","heading","margin","fontWeight","footer","table"],"sources":["/Users/mohammedahethesham/Desktop/quizapp/frontend/src/responsive_02.js"],"sourcesContent":["let width=window.innerWidth/100;\nlet height=window.innerHeight/100\nlet h_font=\"black\";\nexport function mode2(){\n    if(h_font==\"black\")\n    {\n        h_font=\"white\"\n    }\n    else{\n        h_font=\"black\"\n    }\n}\nexport const res2={\n    stats:{\n        image:function(image)\n        {\n            let style={\n                width:`${10*width}px`,\n                height:`${20*height}px`,\n                position:'relative',\n                top:`${10*height}px`,\n                left:`${5*width}px`,\n                backgroundImage:`url(${image})`,\n                backgroundSize:`${10*width}px ${20*height}px`,\n            }\n            return style;\n        },\n        leaderboard:function(){\n            let style={\n               position:'relative',\n               bottom:`${30*height}px`,\n               left:`${30*width}px`,\n               width:`${40*width}px`,\n               border:`${Math.min(0.1*height,0.1*width)}px solid grey`,\n               color:h_font\n\n            }\n            return style;\n        },\n        header:function(){\n            let style={\n                height:`${10*height}px`,\n                width:`${60*width}px`,\n                position:\"relative\",\n                color:h_font\n\n            }\n            return style;\n        },\n        heading:function(){\n            let style={\n                bottom:`${30*height}px`,\n                left:`${41.5*width}px`,\n                position:\"relative\",\n                margin:`${5*height}px`,\n                color:h_font,\n                fontWeight:'100'\n\n            }\n            return style;\n        },\n        footer:function(){\n            let style={\n                position:\"relative\",\n                top:`${22*height}px`\n            }\n            return style;\n        },\n        table:function(){\n            let style={\n                position:'relative',\n                color:h_font,\n                top:`${15*height}px`\n            }\n            return style\n        }\n    \n   \n    }\n}"],"mappings":"AAAA,IAAIA,KAAK,GAACC,MAAM,CAACC,UAAU,GAAC,GAAG;AAC/B,IAAIC,MAAM,GAACF,MAAM,CAACG,WAAW,GAAC,GAAG;AACjC,IAAIC,MAAM,GAAC,OAAO;AAClB,OAAO,SAASC,KAAKA,CAAA,EAAE;EACnB,IAAGD,MAAM,IAAE,OAAO,EAClB;IACIA,MAAM,GAAC,OAAO;EAClB,CAAC,MACG;IACAA,MAAM,GAAC,OAAO;EAClB;AACJ;AACA,OAAO,MAAME,IAAI,GAAC;EACdC,KAAK,EAAC;IACFC,KAAK,EAAC,SAAAA,CAASA,KAAK,EACpB;MACI,IAAIC,KAAK,GAAC;QACNV,KAAK,EAAE,GAAE,EAAE,GAACA,KAAM,IAAG;QACrBG,MAAM,EAAE,GAAE,EAAE,GAACA,MAAO,IAAG;QACvBQ,QAAQ,EAAC,UAAU;QACnBC,GAAG,EAAE,GAAE,EAAE,GAACT,MAAO,IAAG;QACpBU,IAAI,EAAE,GAAE,CAAC,GAACb,KAAM,IAAG;QACnBc,eAAe,EAAE,OAAML,KAAM,GAAE;QAC/BM,cAAc,EAAE,GAAE,EAAE,GAACf,KAAM,MAAK,EAAE,GAACG,MAAO;MAC9C,CAAC;MACD,OAAOO,KAAK;IAChB,CAAC;IACDM,WAAW,EAAC,SAAAA,CAAA,EAAU;MAClB,IAAIN,KAAK,GAAC;QACPC,QAAQ,EAAC,UAAU;QACnBM,MAAM,EAAE,GAAE,EAAE,GAACd,MAAO,IAAG;QACvBU,IAAI,EAAE,GAAE,EAAE,GAACb,KAAM,IAAG;QACpBA,KAAK,EAAE,GAAE,EAAE,GAACA,KAAM,IAAG;QACrBkB,MAAM,EAAE,GAAEC,IAAI,CAACC,GAAG,CAAC,GAAG,GAACjB,MAAM,EAAC,GAAG,GAACH,KAAK,CAAE,eAAc;QACvDqB,KAAK,EAAChB;MAET,CAAC;MACD,OAAOK,KAAK;IAChB,CAAC;IACDY,MAAM,EAAC,SAAAA,CAAA,EAAU;MACb,IAAIZ,KAAK,GAAC;QACNP,MAAM,EAAE,GAAE,EAAE,GAACA,MAAO,IAAG;QACvBH,KAAK,EAAE,GAAE,EAAE,GAACA,KAAM,IAAG;QACrBW,QAAQ,EAAC,UAAU;QACnBU,KAAK,EAAChB;MAEV,CAAC;MACD,OAAOK,KAAK;IAChB,CAAC;IACDa,OAAO,EAAC,SAAAA,CAAA,EAAU;MACd,IAAIb,KAAK,GAAC;QACNO,MAAM,EAAE,GAAE,EAAE,GAACd,MAAO,IAAG;QACvBU,IAAI,EAAE,GAAE,IAAI,GAACb,KAAM,IAAG;QACtBW,QAAQ,EAAC,UAAU;QACnBa,MAAM,EAAE,GAAE,CAAC,GAACrB,MAAO,IAAG;QACtBkB,KAAK,EAAChB,MAAM;QACZoB,UAAU,EAAC;MAEf,CAAC;MACD,OAAOf,KAAK;IAChB,CAAC;IACDgB,MAAM,EAAC,SAAAA,CAAA,EAAU;MACb,IAAIhB,KAAK,GAAC;QACNC,QAAQ,EAAC,UAAU;QACnBC,GAAG,EAAE,GAAE,EAAE,GAACT,MAAO;MACrB,CAAC;MACD,OAAOO,KAAK;IAChB,CAAC;IACDiB,KAAK,EAAC,SAAAA,CAAA,EAAU;MACZ,IAAIjB,KAAK,GAAC;QACNC,QAAQ,EAAC,UAAU;QACnBU,KAAK,EAAChB,MAAM;QACZO,GAAG,EAAE,GAAE,EAAE,GAACT,MAAO;MACrB,CAAC;MACD,OAAOO,KAAK;IAChB;EAGJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}