{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedahethesham/Desktop/app/app/src/index.js\";\nimport createSudoku from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './snake.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet root = ReactDOM.createRoot(document.getElementById('root'));\n/*let ans=createSudoku()\nlet sudoku=JSON.parse(JSON.stringify(ans));\nlet i=0;\nwhile(i<30)\n  {\n    let row=Math.floor(Math.random()*9)\n    let col=Math.floor(Math.random()*9)\n    if(sudoku[row][col]!==-1)\n    {\n      i++;\n      sudoku[row][col]=-1;\n    }\n  }\nlet count=0;\nlet temp=JSON.parse(JSON.stringify(sudoku));\nconst root=ReactDOM.createRoot(document.getElementById('root'));\nclass Start extends React.Component{\n  func=()=>{\n    root.render(<Sudoku />)\n  }\n  render(){\n    return(\n      <button className='startButton' onClick={this.func}>\n        Click to Start\n      </button>\n    )\n  }\n}\nclass Sudoku extends React.Component{\n  ans=()=>{\n      count=0;\n      for(let i=0;i<sudoku.length;i++)\n      {\n        for(let j=0;j<sudoku[i].length;j++)\n        {\n          if(sudoku[i][j]==-1)\n          {\n            let t=document.getElementById(count);\n            t.value=ans[i][j]\n            count++;\n          }\n        }\n      }\n  }\n  verify=()=>{\n    count=0;\n    let flag=true;\n    for(let i=0;i<sudoku.length;i++)\n    {\n      for(let j=0;j<sudoku[i].length;j++)\n      {\n        if(sudoku[i][j]==-1)\n        {\n          let t=document.getElementById(count).value;\n          count++;\n          if(t!=ans[i][j])\n          {alert(\"try again!\"); flag=false\n          break;}\n        }\n      }\n      if(!flag)break;\n    }\n    if(flag)\n    alert(\"congragulations!\")\n  }\n  render(){\n    return (<>\n    <div className='Sudoku'>\n      {sudoku.map((arr,index)=><Row arr={arr} r={index}/>)}\n      </div>\n      <div >\n        <button className='ansButton' onClick={this.ans}>check answer</button>\n      </div>\n\n      <div >\n        <button className='verifyButton'onClick={this.verify}>submit</button>\n      </div>\n      </>\n    )\n  }\n}\nclass Row extends React.Component{\n  constructor(props)\n  {\n    super(props)\n  }\n  render()\n  {\n    return(\n      <div className='row'>{\n        this.props.arr.map((val,index)=>{\n        if(val==-1)\n        return <Input r={this.props.r} c={index} />\n        else\n        return <Element val={val}/>\n      })\n    }\n    </div>\n    )\n  }\n}\nclass Input extends React.Component{\n  constructor(props)\n  {\n    super(props)\n    \n  }\n  update=(e)=>{\n    let k=e.target.value;\n    if(k.length>1 || k.charCodeAt('0')-'0'.charCodeAt('0')>9)\n    {alert(\"invalid number enter between (0-9)\");\n    e.target.value=\"\"}\n    \n  }\n\n  render(){\n    return  <input id={count++}className=\"Element1\"type=\"text\" onKeyUp={this.update}/>\n  }\n}\nclass Element extends React.Component{\n  constructor(props)\n  {\n    super(props)\n  }\n  render(){\n   return( <div className='Element'>\n      {this.props.val}\n    </div>)\n  }\n}\n//root.render(<Start/>)\nlet data={\n  name:'alex',\n  id:1,\n  task:'for demo'\n}\nconst requestOptions = {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body:JSON.stringify(data)\n};\n//fetch('http://localhost:8000', requestOptions);\nlet d\nlet res=await fetch('http://localhost:8000/get')\n.then((res)=>d=res.json())\n.then((data)=>d=data)\nclass Todo extends React.Component{\n  render()\n  {\n    return (\n      <div className='Todo'>\n        <div style={{height:'80%'}}>\n        {d.map((data)=>\n        {return(<div style={{height:'20%'}}><Task id={data.id}task={data.task}done={data.done}/>\n        </div>)})}\n        </div>\n        <Input1/>\n      </div>\n    )\n  }\n}\nclass Input1 extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      \"val\":\"add text\"\n    }\n    this.add=this.add.bind(this);\n    this.update=this.update.bind(this)\n  }\n  update(e){\n    let v=e.target.value;\n    this.setState({\"val\":v});\n  }\n  add(){\n    d.push({\n      \"id\":count++,\n      task:this.state.val,\n      done:false\n    })\n    fetch('http://localhost:8000/post',{\n      method:'POST',\n      headers:{ 'Content-Type': 'application/json' },\n      body:JSON.stringify(d)\n    })\n    root.render(<Todo/>)\n  }\n  render(){\n    return(\n      <div >\n        <input type='text' defaultValue={this.state.val} className='Input'onKeyUp={this.update}/>\n        <button className='add' onClick={this.add} >Add</button>\n      </div>\n    )\n  }\n}\nclass Task extends React.Component{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      id:props.id,\n      task:props.task,\n      done:props.done\n    }\n  }\n  render()\n  {\n    return (\n      <div className='Task'>\n        <input type='checkbox' id={this.state.id}/>\n        <label htmlFor={this.state.id}>{this.state.task}</label>\n      </div>\n    )\n  }\n}*/\nlet mat = [];\nlet count = 0;\nfor (let i = 0; i < 40; i++) {\n  let temp = [];\n  for (let j = 0; j < 75; j++) temp.push(0);\n  mat.push(temp);\n}\nlet refs = [];\nrefs = JSON.parse(JSON.stringify(mat));\nclass Board extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Board\",\n      children: mat.map(mat => /*#__PURE__*/_jsxDEV(Row, {\n        mat: mat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Row\",\n      children: this.props.mat.map(ele => /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Element extends React.Component {\n  constructor() {\n    super();\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n  lert() {\n    alert('hello');\n    this.style.backgroundColor = \"black\";\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Element\",\n      id: \"1\",\n      refs: this.myRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this);\n  }\n}\n/*function start(){\n    let i=0;\n    while(i<count)\n    {\n    setTimeout(()=>{\n        let t=document.getElementById(i++)\n        t.style.backgroundColor='black'\n    },500)\n     }\n}*/\nroot.render( /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 286,\n  columnNumber: 13\n}, this));\nthis.myRef.current.style.backgroundColor = \"black\";","map":{"version":3,"names":["createSudoku","React","ReactDOM","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","mat","count","i","temp","j","push","refs","JSON","parse","stringify","Board","Component","render","className","children","map","Row","fileName","_jsxFileName","lineNumber","columnNumber","constructor","props","ele","Element","myRef","createRef","lert","alert","style","backgroundColor","id","current"],"sources":["/Users/mohammedahethesham/Desktop/app/app/src/index.js"],"sourcesContent":["import createSudoku  from './App.js'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './snake.css'\n\nlet root=ReactDOM.createRoot(document.getElementById('root'));\n/*let ans=createSudoku()\nlet sudoku=JSON.parse(JSON.stringify(ans));\nlet i=0;\nwhile(i<30)\n  {\n    let row=Math.floor(Math.random()*9)\n    let col=Math.floor(Math.random()*9)\n    if(sudoku[row][col]!==-1)\n    {\n      i++;\n      sudoku[row][col]=-1;\n    }\n  }\nlet count=0;\nlet temp=JSON.parse(JSON.stringify(sudoku));\nconst root=ReactDOM.createRoot(document.getElementById('root'));\nclass Start extends React.Component{\n  func=()=>{\n    root.render(<Sudoku />)\n  }\n  render(){\n    return(\n      <button className='startButton' onClick={this.func}>\n        Click to Start\n      </button>\n    )\n  }\n}\nclass Sudoku extends React.Component{\n  ans=()=>{\n      count=0;\n      for(let i=0;i<sudoku.length;i++)\n      {\n        for(let j=0;j<sudoku[i].length;j++)\n        {\n          if(sudoku[i][j]==-1)\n          {\n            let t=document.getElementById(count);\n            t.value=ans[i][j]\n            count++;\n          }\n        }\n      }\n  }\n  verify=()=>{\n    count=0;\n    let flag=true;\n    for(let i=0;i<sudoku.length;i++)\n    {\n      for(let j=0;j<sudoku[i].length;j++)\n      {\n        if(sudoku[i][j]==-1)\n        {\n          let t=document.getElementById(count).value;\n          count++;\n          if(t!=ans[i][j])\n          {alert(\"try again!\"); flag=false\n          break;}\n        }\n      }\n      if(!flag)break;\n    }\n    if(flag)\n    alert(\"congragulations!\")\n  }\n  render(){\n    return (<>\n    <div className='Sudoku'>\n      {sudoku.map((arr,index)=><Row arr={arr} r={index}/>)}\n      </div>\n      <div >\n        <button className='ansButton' onClick={this.ans}>check answer</button>\n      </div>\n\n      <div >\n        <button className='verifyButton'onClick={this.verify}>submit</button>\n      </div>\n      </>\n    )\n  }\n}\nclass Row extends React.Component{\n  constructor(props)\n  {\n    super(props)\n  }\n  render()\n  {\n    return(\n      <div className='row'>{\n        this.props.arr.map((val,index)=>{\n        if(val==-1)\n        return <Input r={this.props.r} c={index} />\n        else\n        return <Element val={val}/>\n      })\n    }\n    </div>\n    )\n  }\n}\nclass Input extends React.Component{\n  constructor(props)\n  {\n    super(props)\n    \n  }\n  update=(e)=>{\n    let k=e.target.value;\n    if(k.length>1 || k.charCodeAt('0')-'0'.charCodeAt('0')>9)\n    {alert(\"invalid number enter between (0-9)\");\n    e.target.value=\"\"}\n    \n  }\n\n  render(){\n    return  <input id={count++}className=\"Element1\"type=\"text\" onKeyUp={this.update}/>\n  }\n}\nclass Element extends React.Component{\n  constructor(props)\n  {\n    super(props)\n  }\n  render(){\n   return( <div className='Element'>\n      {this.props.val}\n    </div>)\n  }\n}\n//root.render(<Start/>)\nlet data={\n  name:'alex',\n  id:1,\n  task:'for demo'\n}\nconst requestOptions = {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body:JSON.stringify(data)\n};\n//fetch('http://localhost:8000', requestOptions);\nlet d\nlet res=await fetch('http://localhost:8000/get')\n.then((res)=>d=res.json())\n.then((data)=>d=data)\nclass Todo extends React.Component{\n  render()\n  {\n    return (\n      <div className='Todo'>\n        <div style={{height:'80%'}}>\n        {d.map((data)=>\n        {return(<div style={{height:'20%'}}><Task id={data.id}task={data.task}done={data.done}/>\n        </div>)})}\n        </div>\n        <Input1/>\n      </div>\n    )\n  }\n}\nclass Input1 extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      \"val\":\"add text\"\n    }\n    this.add=this.add.bind(this);\n    this.update=this.update.bind(this)\n  }\n  update(e){\n    let v=e.target.value;\n    this.setState({\"val\":v});\n  }\n  add(){\n    d.push({\n      \"id\":count++,\n      task:this.state.val,\n      done:false\n    })\n    fetch('http://localhost:8000/post',{\n      method:'POST',\n      headers:{ 'Content-Type': 'application/json' },\n      body:JSON.stringify(d)\n    })\n    root.render(<Todo/>)\n  }\n  render(){\n    return(\n      <div >\n        <input type='text' defaultValue={this.state.val} className='Input'onKeyUp={this.update}/>\n        <button className='add' onClick={this.add} >Add</button>\n      </div>\n    )\n  }\n}\nclass Task extends React.Component{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      id:props.id,\n      task:props.task,\n      done:props.done\n    }\n  }\n  render()\n  {\n    return (\n      <div className='Task'>\n        <input type='checkbox' id={this.state.id}/>\n        <label htmlFor={this.state.id}>{this.state.task}</label>\n      </div>\n    )\n  }\n}*/\nlet mat=[]\nlet count=0\nfor(let i=0;i<40;i++)\n{\n    let temp=[]\n    for(let j=0;j<75;j++)\n    temp.push(0);\n    mat.push(temp)\n}\nlet refs=[]\nrefs=JSON.parse(JSON.stringify(mat))\nclass Board extends React.Component{\n    render()\n    {\n        return(\n            <div className='Board'>\n               {mat.map((mat)=><Row mat={mat}/>)}\n            </div>\n        )\n    }\n}\nclass Row extends React.Component{\n    constructor(props)\n    {\n        super(props)\n    }\n    render(){\n        return(\n            <div className='Row'>\n            {this.props.mat.map((ele)=><Element />)}\n            </div>\n        )\n    }\n}\nclass Element extends React.Component{\n    constructor(){\n        super()\n        this.myRef=React.createRef()\n        \n    }\n    lert(){\n      alert('hello')\n        this.style.backgroundColor=\"black\"    \n    }\n    render(){\n        return(\n            <div className='Element' id='1'refs={this.myRef}>\n\n            </div>\n        )\n    }\n}\n/*function start(){\n    let i=0;\n    while(i<count)\n    {\n    setTimeout(()=>{\n        let t=document.getElementById(i++)\n        t.style.backgroundColor='black'\n    },500)\n     }\n}*/\nroot.render(<Board/>)\nthis.myRef.current.style.backgroundColor=\"black\"\n\n\n\n"],"mappings":";AAAA,OAAOA,YAAY,MAAO,UAAU;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,IAAIC,IAAI,GAACH,QAAQ,CAACI,UAAU,CAACC,QAAQ,CAACC,cAAcpB;EACI,IAAIC,IAAI,GAAC,EAAE;EACX,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,EAAE,EAACA,CAAC,EAAE,EACpBD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;EACZL,GAAG,CAACK,IAAI,CAACF,IAAI,CAAC;AAClB;AACA,IAAIG,IAAI,GAAC,EAAE;AACXA,IAAI,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACT,GAAG,CAAC,CAAC;AACpC,MAAMU,KAAK,SAASlB,KAAK,CAACmB,SAAS;EAC/BC,MAAMA,CAAA,EACN;IACI,oBACIjB,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAClBd,GAAG,CAACe,GAAG,CAAEf,GAAG,iBAAGL,OAAA,CAACqB,GAAG;QAAChB,GAAG,EAAEA;MAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAEd;AACJ;AACA,MAAMJ,GAAG,SAASxB,KAAK,CAACmB,SAAS;EAC7BU,WAAWA,CAACC,KAAK,EACjB;IACI,KAAK,CAACA,KAAK,CAAC;EAChB;EACAV,MAAMA,CAAA,EAAE;IACJ,oBACIjB,OAAA;MAAKkB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACnB,IAAI,CAACQ,KAAK,CAACtB,GAAG,CAACe,GAAG,CAAEQ,GAAG,iBAAG5B,OAAA,CAAC6B,OAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEd;AACJ;AACA,MAAMI,OAAO,SAAShC,KAAK,CAACmB,SAAS;EACjCU,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IACP,IAAI,CAACI,KAAK,gBAACjC,KAAK,CAACkC,SAAS,CAAC,CAAC;EAEhC;EACAC,IAAIA,CAAA,EAAE;IACJC,KAAK,CAAC,OAAO,CAAC;IACZ,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;EACtC;EACAlB,MAAMA,CAAA,EAAE;IACJ,oBACIjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAACkB,EAAE,EAAC,GAAG;MAAAzB,IAAI,EAAE,IAAI,CAACmB;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C,CAAC;EAEd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,IAAI,CAACgB,MAAM,eAACjB,OAAA,CAACe,KAAK;EAAAO,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAC,CAAC,CAAC;AACrB,IAAI,CAACK,KAAK,CAACO,OAAO,CAACH,KAAK,CAACC,eAAe,GAAC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}