{"ast":null,"code":"import _classCallCheck from\"/Users/mohammedahethesham/Desktop/quizapp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/mohammedahethesham/Desktop/quizapp/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/mohammedahethesham/Desktop/quizapp/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/mohammedahethesham/Desktop/quizapp/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/mohammedahethesham/Desktop/quizapp/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import{responsive,responsive_mock}from\"./responsive.js\";import{Side_bar}from\"./side_bar.js\";import ReactDOM from\"react-dom\";import{Heading}from\"./heading.js\";import img from'./ds.png';import{Mocktest_block}from\"./Mocktest.js\";import{Questions}from\"./Questions.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var dsobj={image:img,h1:'data structures',subtopics:[['Array',img,0,'/ds/array'],['Stack',img,1,'/ds/stack'],['Queue',img,2,'/ds/queue'],['LinkedList',img,3,'/ds/linkedlist'],['Binary Trees',img,4,'/ds/tree'],['Graphs',img,5,'/ds/graph'],['Hash\\nTables',img,6,'/ds/hash'],['Trie',img,7,'/ds/trie'],['Segment Tree',img,8,'/ds/segtree']]};export var Dsa_header=/*#__PURE__*/function(_React$Component){_inherits(Dsa_header,_React$Component);var _super=_createSuper(Dsa_header);function Dsa_header(props){var _this;_classCallCheck(this,Dsa_header);_this=_super.call(this,props);_this.state={style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.resize=_this.resize.bind(_assertThisInitialized(_this));window.addEventListener('resize',_this.resize);return _this;}_createClass(Dsa_header,[{key:\"resize\",value:function resize(){this.setState({style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()});}},{key:\"handleClick\",value:function handleClick(){window.scrollTo(0,0);ReactDOM.render(/*#__PURE__*/_jsx(Questions,{obj:dsobj}),document.getElementById('root'));}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"button\",{style:this.state.style,onClick:this.handleClick,children:[/*#__PURE__*/_jsx(\"div\",{style:this.state.image}),/*#__PURE__*/_jsxs(\"p\",{style:this.state.text,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Data Structures\"}),\"In computer science, a data structure is a data organization, management, and storage format that is usually chosen for efficient access to data. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data i.e., it is an algebraic structure about data.\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Eg:Array, String, Stack, Queue, HashTables, Tree, Graphs\"]})]});}}]);return Dsa_header;}(React.Component);export var Ds_mockheader=/*#__PURE__*/function(_React$Component2){_inherits(Ds_mockheader,_React$Component2);var _super2=_createSuper(Ds_mockheader);function Ds_mockheader(){var _this2;_classCallCheck(this,Ds_mockheader);_this2=_super2.call(this);_this2.state={style:responsive_mock.mockblock.ds(),count:'00'};_this2.resize=_this2.resize.bind(_assertThisInitialized(_this2));window.addEventListener('resize',_this2.resize);return _this2;}_createClass(Ds_mockheader,[{key:\"resize\",value:function resize(){this.setState({style:responsive_mock.mockblock.ds(),count:'00'});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{style:this.state.style,children:/*#__PURE__*/_jsx(Mocktest_block,{img:img,str:'dsa',topic:\"ds\"})});}}]);return Ds_mockheader;}(React.Component);","map":{"version":3,"names":["React","responsive","responsive_mock","Side_bar","ReactDOM","Heading","img","Mocktest_block","Questions","jsx","_jsx","jsxs","_jsxs","dsobj","image","h1","subtopics","Dsa_header","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","style","dsa","Main","text","handleClick","bind","_assertThisInitialized","resize","window","addEventListener","_createClass","key","value","setState","scrollTo","render","obj","document","getElementById","onClick","children","Component","Ds_mockheader","_React$Component2","_super2","_this2","mockblock","ds","count","str","topic"],"sources":["/Users/mohammedahethesham/Desktop/quizapp/frontend/src/dsa.js"],"sourcesContent":["import React from \"react\";\nimport { responsive,responsive_mock } from \"./responsive.js\";\nimport {Side_bar} from \"./side_bar.js\";\nimport ReactDOM from \"react-dom\";\nimport { Heading } from \"./heading.js\";\nimport img from './ds.png'\nimport { Mocktest_block } from \"./Mocktest.js\";\nimport { Questions } from \"./Questions.js\";\nexport  let dsobj={\n    image:img,\n    h1:'data structures',\n    subtopics:[['Array',img,0,'/ds/array'],['Stack',img,1,'/ds/stack'],['Queue',img,2,'/ds/queue'],['LinkedList',img,3,'/ds/linkedlist'],\n    ['Binary Trees',img,4,'/ds/tree'],['Graphs',img,5,'/ds/graph'],['Hash\\nTables',img,6,'/ds/hash'],['Trie',img,7,'/ds/trie'],['Segment Tree',img,8,'/ds/segtree']]\n}\nexport class Dsa_header extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()}\n        this.handleClick=this.handleClick.bind(this)\n        this.resize=this.resize.bind(this);\n        window.addEventListener('resize',this.resize);\n    }\n    resize(){\n        this.setState({style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()})\n    }\n    handleClick(){\n       window.scrollTo(0,0)\n        ReactDOM.render(<Questions obj={dsobj}/>,document.getElementById('root'));\n    }\n    render(){\n        return(\n            <button style={this.state.style} onClick={this.handleClick}>\n                <div style={this.state.image}>\n                </div>\n             <p style={this.state.text}>\n                <h1>Data Structures</h1>\n                In computer science, a data structure is a data organization, management, and storage format that is usually chosen for efficient access to data.\n                More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data\n                i.e., it is an algebraic structure about data.\n                <br/><br/>\n                Eg:Array, String, Stack, Queue, HashTables, Tree, Graphs\n            </p>\n            </button>\n        )\n    }\n}\nexport class Ds_mockheader extends React.Component{\n    constructor(){\n        super()\n        this.state={style:responsive_mock.mockblock.ds(),count:'00'}\n        this.resize=this.resize.bind(this)\n        window.addEventListener('resize',this.resize)\n    }\n    resize(){\n        this.setState({style:responsive_mock.mockblock.ds(),count:'00'})\n    }\n    render(){\n        return <div style={this.state.style}>\n            <Mocktest_block img={img} str={'dsa'} topic={\"ds\"}/>\n        </div>\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}