{"ast":null,"code":"var _jsxFileName = \"/Users/mohammedahethesham/Desktop/quizapp/frontend/src/dsa.js\";\nimport React from \"react\";\nimport { responsive, responsive_mock } from \"./responsive.js\";\nimport { Side_bar } from \"./side_bar.js\";\nimport ReactDOM from \"react-dom\";\nimport { Heading } from \"./heading.js\";\nimport img from './ds.png';\nimport { Mocktest_block } from \"./Mocktest.js\";\nimport { Questions } from \"./Questions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let dsobj = {\n  image: img,\n  h1: 'data structures',\n  subtopics: [['Array', img, 0, '/ds/array'], ['Stack', img, 1, '/ds/stack'], ['Queue', img, 2, '/ds/queue'], ['LinkedList', img, 3, '/ds/linkedlist'], ['Binary Trees', img, 4, '/ds/tree'], ['Graphs', img, 5, '/ds/graph'], ['Hash\\nTables', img, 6, '/ds/hash'], ['Trie', img, 7, '/ds/trie'], ['Segment Tree', img, 8, '/ds/segtree']]\n};\nexport class Dsa_header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style: responsive.dsa.Main(),\n      image: responsive.dsa.image(img),\n      text: responsive.dsa.text()\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.resize = this.resize.bind(this);\n    window.addEventListener('resize', this.resize);\n  }\n  resize() {\n    this.setState({\n      style: responsive.dsa.Main(),\n      image: responsive.dsa.image(img),\n      text: responsive.dsa.text()\n    });\n  }\n  handleClick() {\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(Questions, {\n      obj: dsobj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this), document.getElementById('root'));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: this.state.style,\n      onClick: this.handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: this.state.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: this.state.text,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Data Structures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), \"In computer science, a data structure is a data organization, management, and storage format that is usually chosen for efficient access to data. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data i.e., it is an algebraic structure about data.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this), \"Eg:Array, String, Stack, Queue, HashTables, Tree, Graphs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport class Ds_mockheader extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      style: responsive_mock.mockblock.ds(),\n      count: '00'\n    };\n    this.resize = this.resize.bind(this);\n    window.addEventListener('resize', this.resize);\n  }\n  resize() {\n    this.setState({\n      style: responsive_mock.mockblock.ds(),\n      count: '00'\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: this.state.style,\n      children: /*#__PURE__*/_jsxDEV(Mocktest_block, {\n        img: img,\n        count: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this);\n  }\n}","map":{"version":3,"names":["React","responsive","responsive_mock","Side_bar","ReactDOM","Heading","img","Mocktest_block","Questions","jsxDEV","_jsxDEV","dsobj","image","h1","subtopics","Dsa_header","Component","constructor","props","state","style","dsa","Main","text","handleClick","bind","resize","window","addEventListener","setState","render","obj","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","onClick","children","Ds_mockheader","mockblock","ds","count"],"sources":["/Users/mohammedahethesham/Desktop/quizapp/frontend/src/dsa.js"],"sourcesContent":["import React from \"react\";\nimport { responsive,responsive_mock } from \"./responsive.js\";\nimport {Side_bar} from \"./side_bar.js\";\nimport ReactDOM from \"react-dom\";\nimport { Heading } from \"./heading.js\";\nimport img from './ds.png'\nimport { Mocktest_block } from \"./Mocktest.js\";\nimport { Questions } from \"./Questions.js\";\nexport  let dsobj={\n    image:img,\n    h1:'data structures',\n    subtopics:[['Array',img,0,'/ds/array'],['Stack',img,1,'/ds/stack'],['Queue',img,2,'/ds/queue'],['LinkedList',img,3,'/ds/linkedlist'],\n    ['Binary Trees',img,4,'/ds/tree'],['Graphs',img,5,'/ds/graph'],['Hash\\nTables',img,6,'/ds/hash'],['Trie',img,7,'/ds/trie'],['Segment Tree',img,8,'/ds/segtree']]\n}\nexport class Dsa_header extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()}\n        this.handleClick=this.handleClick.bind(this)\n        this.resize=this.resize.bind(this);\n        window.addEventListener('resize',this.resize);\n    }\n    resize(){\n        this.setState({style:responsive.dsa.Main(),image:responsive.dsa.image(img),text:responsive.dsa.text()})\n    }\n    handleClick(){\n       \n        ReactDOM.render(<Questions obj={dsobj}/>,document.getElementById('root'));\n    }\n    render(){\n        return(\n            <button style={this.state.style} onClick={this.handleClick}>\n                <div style={this.state.image}>\n                </div>\n             <p style={this.state.text}>\n                <h1>Data Structures</h1>\n                In computer science, a data structure is a data organization, management, and storage format that is usually chosen for efficient access to data.\n                More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data\n                i.e., it is an algebraic structure about data.\n                <br/><br/>\n                Eg:Array, String, Stack, Queue, HashTables, Tree, Graphs\n            </p>\n            </button>\n        )\n    }\n}\nexport class Ds_mockheader extends React.Component{\n    constructor(){\n        super()\n        this.state={style:responsive_mock.mockblock.ds(),count:'00'}\n        this.resize=this.resize.bind(this)\n        window.addEventListener('resize',this.resize)\n    }\n    resize(){\n        this.setState({style:responsive_mock.mockblock.ds(),count:'00'})\n    }\n    render(){\n        return <div style={this.state.style}>\n            <Mocktest_block img={img}count={this.state.count}/>\n        </div>\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}